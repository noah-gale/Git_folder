'median2' = median2, 'sd1' = sd1, 'sd2' = sd2))
sample15 = coda.samples(jags15, c("alpha1","alpha", "beta", "beta1", "beta2"), 50000)
quartz()
plot(sample15, trace = FALSE)
summary(sample15)
require(rjags)
# Weibull IT WORKS
#n.15 = sum(death.no.15 + death.yes.15)
Is.Dead15 = data$is.Dead
Gender15 = data$Gender
Nobility15 = data$Nobility
In_Book_15 = data$In_Book
#In_Book_152 = data$In_Book
N_15 =  length(data$In_Book)
prior_model_Weibull = "model{
for (i in 1:N){
#Is.Dead[i] <- Is.Dead[i]
#Gender[i] <- Gender[i]
#Nobility[i] <- Nobility[i]
In_Book[i] ~ dweib(alpha,beta)
Is.Dead[i] ~ dbern(Prob[i])
logit(Prob[i]) <-alpha1 + log(exp(-beta*pow(In_Book[i], alpha)) - exp(-beta*pow(In_Book[i] + 1, alpha))) #+ beta1*Gender[i] + beta2*Nobility[i]
}
alpha1 ~ dunif(0,100)
#beta_nu ~dunif(0,100)
alpha ~ dunif(0,100)
beta ~ dunif(0,100)
beta1 ~ dnorm(median1, sd1)
beta2 ~ dnorm(median2, sd2)
}"
prior_model.con_W<-textConnection(prior_model_Weibull)
jags15 = jags.model(prior_model.con_W, n.chains = 1, n.adapt = 10000,
data = list('In_Book' = In_Book_15, 'N' = N_15, 'Is.Dead15' = Is.Dead15,
'Gender' = Gender15, 'Nobility' = Nobility15, 'median1' = median1,
'median2' = median2, 'sd1' = sd1, 'sd2' = sd2))
sample15 = coda.samples(jags15, c("alpha1","alpha", "beta"), 50000)
quartz()
plot(sample15, trace = TRUE)
summary(sample15)
# Weibull IT WORKS
#n.15 = sum(death.no.15 + death.yes.15)
Is.Dead15 = data$is.Dead
Gender15 = data$Gender
Nobility15 = data$Nobility
In_Book_15 = data$In_Book
#In_Book_152 = data$In_Book
N_15 =  length(data$In_Book)
prior_model_Weibull = "model{
for (i in 1:N){
#Is.Dead[i] <- Is.Dead[i]
#Gender[i] <- Gender[i]
#Nobility[i] <- Nobility[i]
In_Book[i] ~ dweib(alpha,beta)
Is.Dead[i] ~ dbern(Prob[i])
logit(Prob[i]) <- log(exp(-beta*pow(In_Book[i], alpha)) - exp(-beta*pow(In_Book[i] + 1, alpha))) #+ beta1*Gender[i] + beta2*Nobility[i]
}
#alpha1 ~ dunif(0,100)
#beta_nu ~dunif(0,100)
alpha ~ dunif(0,100)
beta ~ dunif(0,100)
beta1 ~ dnorm(median1, sd1)
beta2 ~ dnorm(median2, sd2)
ORProb = exp(Prob)
}"
prior_model.con_W<-textConnection(prior_model_Weibull)
jags15 = jags.model(prior_model.con_W, n.chains = 1, n.adapt = 10000,
data = list('In_Book' = In_Book_15, 'N' = N_15, 'Is.Dead15' = Is.Dead15,
'Gender' = Gender15, 'Nobility' = Nobility15, 'median1' = median1,
'median2' = median2, 'sd1' = sd1, 'sd2' = sd2))
# Weibull IT WORKS
#n.15 = sum(death.no.15 + death.yes.15)
Is.Dead15 = data$is.Dead
Gender15 = data$Gender
Nobility15 = data$Nobility
In_Book_15 = data$In_Book
#In_Book_152 = data$In_Book
N_15 =  length(data$In_Book)
prior_model_Weibull = "model{
for (i in 1:N){
#Is.Dead[i] <- Is.Dead[i]
#Gender[i] <- Gender[i]
#Nobility[i] <- Nobility[i]
In_Book[i] ~ dweib(alpha,beta)
Is.Dead[i] ~ dbern(Prob[i])
logit(Prob[i]) <- log(exp(-beta*pow(In_Book[i], alpha)) - exp(-beta*pow(In_Book[i] + 1, alpha))) #+ beta1*Gender[i] + beta2*Nobility[i]
}
#alpha1 ~ dunif(0,100)
#beta_nu ~dunif(0,100)
alpha ~ dunif(0,100)
beta ~ dunif(0,100)
beta1 ~ dnorm(median1, sd1)
beta2 ~ dnorm(median2, sd2)
}"
prior_model.con_W<-textConnection(prior_model_Weibull)
jags15 = jags.model(prior_model.con_W, n.chains = 1, n.adapt = 10000,
data = list('In_Book' = In_Book_15, 'N' = N_15, 'Is.Dead15' = Is.Dead15,
'Gender' = Gender15, 'Nobility' = Nobility15, 'median1' = median1,
'median2' = median2, 'sd1' = sd1, 'sd2' = sd2))
sample15 = coda.samples(jags15, c("alpha", "beta"), 50000)
quartz()
plot(sample15, trace = TRUE)
summary(sample15)
# Weibull IT WORKS
#n.15 = sum(death.no.15 + death.yes.15)
Is.Dead15 = data$is.Dead
Gender15 = data$Gender
Nobility15 = data$Nobility
In_Book_15 = data$In_Book
#In_Book_152 = data$In_Book
N_15 =  length(data$In_Book)
prior_model_Weibull = "model{
#alpha ~ dnorm(0, 1.0E-6)
beta1 ~ dnorm(0, 1.0E-6)
beta2 ~ dnorm(0, 1.0E-6)
for (i in 1:N){
#Is.Dead[i] <- Is.Dead[i]
#Gender[i] <- Gender[i]
#Nobility[i] <- Nobility[i]
In_Book[i] ~ dweib(alpha,beta)
Is.Dead[i] ~ dbern(Prob[i])
logit(Prob[i]) <- alpha1 + log(exp(-beta*pow(In_Book[i], alpha)) - exp(-beta*pow(In_Book[i] + 1, alpha))) + beta1*Gender[i] + beta2*Nobility[i]
}
alpha1 ~ dnorm(0, 1.0E-6)
#beta_nu ~dunif(0,100)
alpha ~ dunif(0,100)
beta ~ dunif(0,100)
#beta1 ~ dnorm(median1, sd1)
#beta2 ~ dnorm(median2, sd2)
}"
prior_model.con_W<-textConnection(prior_model_Weibull)
jags15 = jags.model(prior_model.con_W, n.chains = 1, n.adapt = 10000,
data = list('In_Book' = In_Book_15, 'N' = N_15, 'Is.Dead15' = Is.Dead15,
'Gender' = Gender15, 'Nobility' = Nobility15, 'median1' = median1,
'median2' = median2, 'sd1' = sd1, 'sd2' = sd2))
sample15 = coda.samples(jags15, c("alpha1", "alpha", "beta", "beta1", "beta2"), 50000)
quartz()
plot(sample15, trace = TRUE)
summary(sample15)
# Weibull IT WORKS
#n.15 = sum(death.no.15 + death.yes.15)
Is.Dead15 = data$is.Dead
Gender15 = data$Gender
Nobility15 = data$Nobility
In_Book_15 = data$In_Book
#In_Book_152 = data$In_Book
N_15 =  length(data$In_Book)
prior_model_Weibull = "model{
#alpha ~ dnorm(0, 1.0E-6)
beta1 ~ dnorm(0, 1.0E-6)
beta2 ~ dnorm(0, 1.0E-6)
for (i in 1:N){
#Is.Dead[i] <- Is.Dead[i]
#Gender[i] <- Gender[i]
#Nobility[i] <- Nobility[i]
In_Book[i] ~ dweib(alpha,beta)
Is.Dead[i] ~ dbern(Prob[i])
logit(Prob[i]) <- alpha1 + log(exp(-beta*pow(In_Book[i], alpha))/ (1 - exp(-beta*pow(In_Book[i] + 1, alpha)))) + beta1*Gender[i] + beta2*Nobility[i]
}
alpha1 ~ dnorm(0, 1.0E-6)
#beta_nu ~dunif(0,100)
alpha ~ dunif(0,100)
beta ~ dunif(0,100)
#beta1 ~ dnorm(median1, sd1)
#beta2 ~ dnorm(median2, sd2)
}"
prior_model.con_W<-textConnection(prior_model_Weibull)
jags15 = jags.model(prior_model.con_W, n.chains = 1, n.adapt = 10000,
data = list('In_Book' = In_Book_15, 'N' = N_15, 'Is.Dead15' = Is.Dead15,
'Gender' = Gender15, 'Nobility' = Nobility15, 'median1' = median1,
'median2' = median2, 'sd1' = sd1, 'sd2' = sd2))
sample15 = coda.samples(jags15, c("alpha1", "alpha", "beta", "beta1", "beta2"), 50000)
#sample15 = coda.samples(jags15, c("alpha","beta"), 50000)
quartz()
plot(sample15, trace = FALSE)
summary(sample15)
# SIYU'S LOGIT CODE WORKS--------------------------------------------------
prior_model_Logit = "model{
for(i in 1:M){
death.yes[i] ~ dbin(p[i], n[i])
logit(p[i]) <- alpha + beta1*v.Gen[i] + beta2*v.Nob[i]
}
alpha ~ dnorm(0, 1.0E-6)
beta1 ~ dnorm(0, 1.0E-6)
beta2 ~ dnorm(0, 1.0E-6)
ORgen <- exp(beta1)
ORnob <- exp(beta2)
prb1 <- step(0-beta1)
prb2 <- step(0-beta2)
}"
prior_model.con_L<-textConnection(prior_model_Logit)
death.yes.15 = Binary_Matrix15[,4]
death.no.15 = Binary_Matrix15[,3]
n.15 = death.no.15 + death.yes.15
v.Gen.15 = Binary_Matrix15[,2]
v.Nob.15 = Binary_Matrix15[,1]
M.15 = 4
jags15.l = jags.model(prior_model.con_L, n.chains = 1, n.adapt = 200, data = list('death.yes' = death.yes.15, 'n' = n.15,'v.Gen' = v.Gen.15, 'v.Nob' = v.Nob.15, 'M' = M.15))
sample15.l = coda.samples(jags15.l, c("alpha","beta1","beta2", "ORgen", "ORnob", "prb1", "prb2"), 10000)
quartz()
plot(sample15.l, trace = FALSE)
summary(sample15.l)
# Weibull IT WORKS
#n.15 = sum(death.no.15 + death.yes.15)
Is.Dead15 = data$is.Dead
Gender15 = data$Gender
Nobility15 = data$Nobility
In_Book_15 = data$In_Book
#In_Book_152 = data$In_Book
N_15 =  length(data$In_Book)
prior_model_Weibull = "model{
#alpha ~ dnorm(0, 1.0E-6)
beta1 ~ dnorm(0, 1.0E-6)
beta2 ~ dnorm(0, 1.0E-6)
for (i in 1:N){
#Is.Dead[i] <- Is.Dead[i]
#Gender[i] <- Gender[i]
#Nobility[i] <- Nobility[i]
In_Book[i] ~ dweib(alpha,beta)
Is.Dead[i] ~ dbern(Prob[i])
logit(Prob[i]) <- log(alpha1) + log(exp(-beta*pow(In_Book[i], alpha)) - exp(-beta*pow(In_Book[i] + 1, alpha))) + beta1*Gender[i] + beta2*Nobility[i]
}
alpha1 ~ dnorm(0, 1.0E-6)
#beta_nu ~dunif(0,100)
alpha ~ dunif(0,100)
beta ~ dunif(0,100)
#beta1 ~ dnorm(median1, sd1)
#beta2 ~ dnorm(median2, sd2)
}"
prior_model.con_W<-textConnection(prior_model_Weibull)
jags15 = jags.model(prior_model.con_W, n.chains = 1, n.adapt = 10000,
data = list('In_Book' = In_Book_15, 'N' = N_15, 'Is.Dead15' = Is.Dead15,
'Gender' = Gender15, 'Nobility' = Nobility15, 'median1' = median1,
'median2' = median2, 'sd1' = sd1, 'sd2' = sd2))
sample15 = coda.samples(jags15, c("alpha1", "alpha", "beta", "beta1", "beta2"), 50000)
#sample15 = coda.samples(jags15, c("alpha","beta"), 50000)
quartz()
plot(sample15, trace = FALSE)
summary(sample15)
# Weibull IT WORKS
#n.15 = sum(death.no.15 + death.yes.15)
Is.Dead15 = data$is.Dead
Gender15 = data$Gender
Nobility15 = data$Nobility
In_Book_15 = data$In_Book
#In_Book_152 = data$In_Book
N_15 =  length(data$In_Book)
prior_model_Weibull = "model{
#alpha ~ dnorm(0, 1.0E-6)
beta1 ~ dnorm(0, 1.0E-6)
beta2 ~ dnorm(0, 1.0E-6)
for (i in 1:N){
#Is.Dead[i] <- Is.Dead[i]
#Gender[i] <- Gender[i]
#Nobility[i] <- Nobility[i]
In_Book[i] ~ dweib(alpha,beta)
Is.Dead[i] ~ dbern(Prob[i])
logit(Prob[i]) <- log(alpha1) + log(exp(-beta*pow(In_Book[i], alpha)) - exp(-beta*pow(In_Book[i] + 1, alpha))) + beta1*Gender[i] + beta2*Nobility[i]
}
alpha1 ~ dnorm(0, 1.0E-6)
#beta_nu ~dunif(0,100)
alpha ~ dunif(0,100)
beta ~ dunif(0,100)
#beta1 ~ dnorm(median1, sd1)
#beta2 ~ dnorm(median2, sd2)
}"
prior_model.con_W<-textConnection(prior_model_Weibull)
jags15 = jags.model(prior_model.con_W, n.chains = 1, n.adapt = 10000,
data = list('In_Book' = In_Book_15, 'N' = N_15, 'Is.Dead15' = Is.Dead15,
'Gender' = Gender15, 'Nobility' = Nobility15, 'median1' = median1,
'median2' = median2, 'sd1' = sd1, 'sd2' = sd2))
sample15 = coda.samples(jags15, c("Prob[1]", "alpha1", "alpha", "beta", "beta1", "beta2"), 50000)
sample15 = coda.samples(jags15, c("alpha1", "alpha", "beta", "beta1", "beta2"), 50000)
# Weibull IT WORKS
#n.15 = sum(death.no.15 + death.yes.15)
Is.Dead15 = data$is.Dead
Gender15 = data$Gender
Nobility15 = data$Nobility
In_Book_15 = data$In_Book
#In_Book_152 = data$In_Book
N_15 =  length(data$In_Book)
prior_model_Weibull = "model{
#alpha ~ dnorm(0, 1.0E-6)
beta1 ~ dnorm(0, 1.0E-6)
beta2 ~ dnorm(0, 1.0E-6)
for (i in 1:N){
#Is.Dead[i] <- Is.Dead[i]
#Gender[i] <- Gender[i]
#Nobility[i] <- Nobility[i]
In_Book[i] ~ dweib(alpha,beta)
Is.Dead[i] ~ dbern(Prob[i])
logit(Prob[i]) <- log(alpha1) + log(exp(-beta*pow(In_Book[i], alpha)) - exp(-beta*pow(In_Book[i] + 1, alpha))) + beta1*Gender[i] + beta2*Nobility[i]
}
alpha1 ~ dnorm(0, 1.0E-6)
#beta_nu ~dunif(0,100)
alpha ~ dunif(0,100)
beta ~ dunif(0,100)
#beta1 ~ dnorm(median1, sd1)
#beta2 ~ dnorm(median2, sd2)
}"
prior_model.con_W<-textConnection(prior_model_Weibull)
jags15 = jags.model(prior_model.con_W, n.chains = 1, n.adapt = 10000,
data = list('In_Book' = In_Book_15, 'N' = N_15, 'Is.Dead15' = Is.Dead15,
'Gender' = Gender15, 'Nobility' = Nobility15, 'median1' = median1,
'median2' = median2, 'sd1' = sd1, 'sd2' = sd2))
sample15 = coda.samples(jags15, c("alpha1", "alpha", "beta", "beta1", "beta2"), 50000)
quartz()
plot(sample15, trace = FALSE)
summary(sample15)
sample15 = coda.samples(jags15, c("Prob[1]", "alpha1", "alpha", "beta", "beta1", "beta2"), 50000)
sample15 = coda.samples(jags15, c("Prob", "alpha1", "alpha", "beta", "beta1", "beta2"), 50000)
# Weibull IT WORKS
#n.15 = sum(death.no.15 + death.yes.15)
Is.Dead15 = data$is.Dead
Gender15 = data$Gender
Nobility15 = data$Nobility
In_Book_15 = data$In_Book
#In_Book_152 = data$In_Book
N_15 =  length(data$In_Book)
prior_model_Weibull = "model{
#alpha ~ dnorm(0, 1.0E-6)
beta1 ~ dnorm(0, 1.0E-6)
beta2 ~ dnorm(0, 1.0E-6)
for (i in 1:N){
#Is.Dead[i] <- Is.Dead[i]
#Gender[i] <- Gender[i]
#Nobility[i] <- Nobility[i]
In_Book[i] ~ dweib(alpha,beta)
Is.Dead[i] ~ dbern(Prob[i])
logit(Prob[i]) <- log(alpha1) + log(exp(-beta*pow(In_Book[i], alpha)) - exp(-beta*pow(In_Book[i] + 1, alpha))) + beta1*Gender[i] + beta2*Nobility[i]
}
alpha1 ~ dnorm(0, 1.0E-6)
#beta_nu ~dunif(0,100)
alpha ~ dunif(0,100)
beta ~ dunif(0,100)
#beta1 ~ dnorm(median1, sd1)
#beta2 ~ dnorm(median2, sd2)
}"
prior_model.con_W<-textConnection(prior_model_Weibull)
jags15 = jags.model(prior_model.con_W, n.chains = 1, n.adapt = 10000,
data = list('In_Book' = In_Book_15, 'N' = N_15, 'Is.Dead15' = Is.Dead15,
'Gender' = Gender15, 'Nobility' = Nobility15, 'median1' = median1,
'median2' = median2, 'sd1' = sd1, 'sd2' = sd2))
sample15 = coda.samples(jags15, c("Prob", "alpha1", "alpha", "beta", "beta1", "beta2"), 50000)
# Weibull IT WORKS
#n.15 = sum(death.no.15 + death.yes.15)
Is.Dead15 = data$is.Dead
Gender15 = data$Gender
Nobility15 = data$Nobility
In_Book_15 = data$In_Book
#In_Book_152 = data$In_Book
N_15 =  length(data$In_Book)
prior_model_Weibull = "model{
#alpha ~ dnorm(0, 1.0E-6)
beta1 ~ dnorm(0, 1.0E-6)
beta2 ~ dnorm(0, 1.0E-6)
for (i in 1:N){
#Is.Dead[i] <- Is.Dead[i]
#Gender[i] <- Gender[i]
#Nobility[i] <- Nobility[i]
In_Book[i] ~ dweib(alpha,beta)
Is.Dead[i] ~ dbern(Prob[i])
logit(Prob[i]) <- log(alpha1) + log(exp(-beta*pow(In_Book[i], alpha)) - exp(-beta*pow(In_Book[i] + 1, alpha))) + beta1*Gender[i] + beta2*Nobility[i]
}
alpha1 ~ dnorm(0, 1.0E-6)
#beta_nu ~dunif(0,100)
alpha ~ dunif(0,100)
beta ~ dunif(0,100)
#beta1 ~ dnorm(median1, sd1)
#beta2 ~ dnorm(median2, sd2)
}"
prior_model.con_W<-textConnection(prior_model_Weibull)
jags15 = jags.model(prior_model.con_W, n.chains = 1, n.adapt = 10000,
data = list('In_Book' = In_Book_15, 'N' = N_15, 'Is.Dead15' = Is.Dead15,
'Gender' = Gender15, 'Nobility' = Nobility15, 'median1' = median1,
'median2' = median2, 'sd1' = sd1, 'sd2' = sd2))
sample15 = coda.samples(jags15, c("Prob"), 50000)
# Weibull IT WORKS
#n.15 = sum(death.no.15 + death.yes.15)
Is.Dead15 = data$is.Dead
Gender15 = data$Gender
Nobility15 = data$Nobility
In_Book_15 = data$In_Book
#In_Book_152 = data$In_Book
N_15 =  length(data$In_Book)
prior_model_Weibull = "model{
#alpha ~ dnorm(0, 1.0E-6)
beta1 ~ dnorm(0, 1.0E-6)
beta2 ~ dnorm(0, 1.0E-6)
for (i in 1:N){
#Is.Dead[i] <- Is.Dead[i]
#Gender[i] <- Gender[i]
#Nobility[i] <- Nobility[i]
In_Book[i] ~ dweib(alpha,beta)
Is.Dead[i] ~ dbern(Prob[i])
logit(Prob[i]) <- alpha1 + log(exp(-beta*pow(In_Book[i], alpha)) - exp(-beta*pow(In_Book[i] + 1, alpha))) + beta1*Gender[i] + beta2*Nobility[i]
}
alpha1 ~ dnorm(0, 1.0E-6)
#beta_nu ~dunif(0,100)
alpha ~ dunif(0,100)
beta ~ dunif(0,100)
#beta1 ~ dnorm(median1, sd1)
#beta2 ~ dnorm(median2, sd2)
}"
prior_model.con_W<-textConnection(prior_model_Weibull)
jags15 = jags.model(prior_model.con_W, n.chains = 1, n.adapt = 10000,
data = list('In_Book' = In_Book_15, 'N' = N_15, 'Is.Dead15' = Is.Dead15,
'Gender' = Gender15, 'Nobility' = Nobility15, 'median1' = median1,
'median2' = median2, 'sd1' = sd1, 'sd2' = sd2))
sample15 = coda.samples(jags15, c("Prob"), 50000)
summary(sample15)
## Then we use rjags to check convergence in each of the variables from our WinBugs Code.
# Let's try jags
In_Book14 = as.integer(data2$In_Book)
In_Book15 = as.integer(data$In_Book)
# SIYU'S LOGIT CODE WORKS--------------------------------------------------
prior_model_Logit = "model{
for(i in 1:M){
death.yes[i] ~ dbin(p[i], n[i])
logit(p[i]) <- alpha + beta1*v.Gen[i] + beta2*v.Nob[i]
}
alpha ~ dnorm(0, 1.0E-6)
beta1 ~ dnorm(0, 1.0E-6)
beta2 ~ dnorm(0, 1.0E-6)
ORgen <- exp(beta1)
ORnob <- exp(beta2)
prb1 <- step(0-beta1)
prb2 <- step(0-beta2)
}"
prior_model.con_L<-textConnection(prior_model_Logit)
death.yes.15 = Binary_Matrix15[,4]
death.no.15 = Binary_Matrix15[,3]
n.15 = death.no.15 + death.yes.15
v.Gen.15 = Binary_Matrix15[,2]
v.Nob.15 = Binary_Matrix15[,1]
M.15 = 4
jags15.l = jags.model(prior_model.con_L, n.chains = 1, n.adapt = 200, data = list('death.yes' = death.yes.15, 'n' = n.15,'v.Gen' = v.Gen.15, 'v.Nob' = v.Nob.15, 'M' = M.15))
sample15.l = coda.samples(jags15.l, c("alpha","beta1","beta2", "ORgen", "ORnob", "prb1", "prb2"), 10000)
quartz()
plot(sample15.l, trace = FALSE)
summary(sample15.l)
WEIB_PRIOR15 = sample15
geweke.diag(WEIB_PRIOR15, frac1=0.1, frac2=0.5)
geweke.plot(WEIB_PRIOR15, frac1=0.1, frac2=0.5)
# Weibull IT WORKS
#n.15 = sum(death.no.15 + death.yes.15)
Is.Dead15 = data$is.Dead
Gender15 = data$Gender
Nobility15 = data$Nobility
In_Book_15 = data$In_Book
#In_Book_152 = data$In_Book
N_15 =  length(data$In_Book)
prior_model_Weibull = "model{
#alpha ~ dnorm(0, 1.0E-6)
beta1 ~ dnorm(0, 1.0E-6)
beta2 ~ dnorm(0, 1.0E-6)
for (i in 1:N){
#Is.Dead[i] <- Is.Dead[i]
#Gender[i] <- Gender[i]
#Nobility[i] <- Nobility[i]
In_Book[i] ~ dweib(alpha,beta)
Is.Dead[i] ~ dbern(Prob[i])
logit(Prob[i]) <- log(exp(-beta*pow(In_Book[i], alpha)) - exp(-beta*pow(In_Book[i] + 1, alpha))) #+ beta1*Gender[i] + beta2*Nobility[i]
}
alpha1 ~ dnorm(0, 1.0E-6)
#beta_nu ~dunif(0,100)
alpha ~ dunif(0,100)
beta ~ dunif(0,100)
#beta1 ~ dnorm(median1, sd1)
#beta2 ~ dnorm(median2, sd2)
}"
prior_model.con_W<-textConnection(prior_model_Weibull)
jags15 = jags.model(prior_model.con_W, n.chains = 1, n.adapt = 10000,
data = list('In_Book' = In_Book_15, 'N' = N_15, 'Is.Dead15' = Is.Dead15,
'Gender' = Gender15, 'Nobility' = Nobility15, 'median1' = median1,
'median2' = median2, 'sd1' = sd1, 'sd2' = sd2))
sample15 = coda.samples(jags15, c("alpha1", "alpha", "beta", "beta1", "beta2"), 50000)
quartz()
plot(sample15, trace = FALSE)
summary(sample15)
# Weibull IT WORKS
#n.15 = sum(death.no.15 + death.yes.15)
Is.Dead15 = data$is.Dead
Gender15 = data$Gender
Nobility15 = data$Nobility
In_Book_15 = data$In_Book
#In_Book_152 = data$In_Book
N_15 =  length(data$In_Book)
prior_model_Weibull = "model{
#alpha ~ dnorm(0, 1.0E-6)
beta1 ~ dnorm(0, 1.0E-6)
beta2 ~ dnorm(0, 1.0E-6)
for (i in 1:N){
#Is.Dead[i] <- Is.Dead[i]
#Gender[i] <- Gender[i]
#Nobility[i] <- Nobility[i]
In_Book[i] ~ dweib(alpha,beta)
Is.Dead[i] ~ dbern(Prob[i])
logit(Prob[i]) <- log(exp(-beta*pow(In_Book[i], alpha)) - exp(-beta*pow(In_Book[i] + 1, alpha)) /(1 -exp(-beta*pow(In_Book[i], alpha)) - exp(-beta*pow(In_Book[i] + 1, alpha))  ) )     #+ beta1*Gender[i] + beta2*Nobility[i]
}
alpha1 ~ dnorm(0, 1.0E-6)
#beta_nu ~dunif(0,100)
alpha ~ dunif(0,100)
beta ~ dunif(0,100)
#beta1 ~ dnorm(median1, sd1)
#beta2 ~ dnorm(median2, sd2)
}"
prior_model.con_W<-textConnection(prior_model_Weibull)
jags15 = jags.model(prior_model.con_W, n.chains = 1, n.adapt = 10000,
data = list('In_Book' = In_Book_15, 'N' = N_15, 'Is.Dead15' = Is.Dead15,
'Gender' = Gender15, 'Nobility' = Nobility15, 'median1' = median1,
'median2' = median2, 'sd1' = sd1, 'sd2' = sd2))
sample15 = coda.samples(jags15, c("alpha", "beta"), 50000)
